/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/qcs/fastqc" },
            mode: params.publish_dir_mode,
            pattern: "*.html"
        ]
        ext.prefix = { "${meta.id}_raw" }
    }

    withName: NANOPLOT_RAW {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/qcs/nanoplot_raw" },
            mode: params.publish_dir_mode,
            pattern: "*.{png,html,txt}"
        ]
        ext.prefix = 'raw'
    }

    withName: FILTLONG {
        publishDir = [
                path: { "${params.outdir}/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.filtered.fastq.gz",
            ]
        ext.prefix = { "${meta.id}.filtered" }
        ext.args = [
            "--min_length ${params.filtlong_min_length}",
            "--keep_percent ${params.filtlong_keep_percent}",
            "--length_weight ${params.filtlong_length_weight}",
            "--target_bases ${params.filtlong_target_bases}"
        ].join(' ').trim()
    }

    withName: NANOPLOT_FILT {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/qcs/nanoplot_filt" },
            mode: params.publish_dir_mode,
            pattern: "*.{png,html,txt}"
        ]
        ext.prefix = 'filtered'
    }

    withName: RATATOSK {
        ext.args = [
            "--cores ${params.ratatosk_cores}"
        ].join(' ').trim()
    }

    withName: REPLACE_IUPAC {
        publishDir = [
                path: { "${params.outdir}/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.corrected.fastq.gz",
            ]
        ext.prefix = { "${meta.id}.corrected" }
    }

    withName: NANOPLOT_CORR {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/qcs/nanoplot_corr" },
            mode: params.publish_dir_mode,
            pattern: "*.{png,html,txt}"
        ]
        ext.prefix = 'corrected'
    }

    withName: FLYE {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assembly" },
            mode: params.publish_dir_mode,
            pattern: "*.{fasta,gfa,gv}.gz"
        ]
        ext.prefix = { "${meta.id}.assembled" }
        ext.args = [
            "--genome-size ${params.flye_genome_size}",
            "--iterations ${params.flye_iterations}",
            "--debug"
        ].join(' ').trim()
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
